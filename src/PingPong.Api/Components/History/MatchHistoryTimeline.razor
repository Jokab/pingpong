<MudStack Spacing="2" Class="history-timeline">
    <MudText Typo="Typo.h5" Class="font-weight-semibold">Match Log</MudText>
    <MudText Typo="Typo.body2" Color="Color.Secondary">
        Immutable event history preview. Amendments will appear as additional entries so nothing is lost.
    </MudText>

    @foreach (var group in _entries.GroupBy(e => e.Date))
    {
        <MudStack Spacing="1" Class="mt-4">
            <MudText Typo="Typo.subtitle2" Class="text-uppercase text-secondary">
                @group.Key.ToString("MMMM dd, yyyy")
            </MudText>
            @foreach (var entry in group)
            {
                <MudPaper Elevation="0" Class="pa-3">
                    <MudStack Spacing="1">
                        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1" Justify="Justify.SpaceBetween">
                            <MudText Typo="Typo.body1" Class="font-weight-semibold">
                                @entry.Label
                            </MudText>
                            <MudChip T="string" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small">
                                @entry.ResultText
                            </MudChip>
                        </MudStack>
                        <MudStack Row="true" Spacing="1">
                            <MudIcon Icon="@Icons.Material.Filled.SportsTennis" Color="Color.Secondary" />
                            <MudText Typo="Typo.body2">@entry.PlayerOne vs @entry.PlayerTwo</MudText>
                        </MudStack>
                        <MudStack Row="true" Spacing="1" AlignItems="AlignItems.Center">
                            <MudIcon Icon="@Icons.Material.Filled.Score" Color="Color.Secondary" />
                            <MudText Typo="Typo.body2">Sets: @entry.SetSummary</MudText>
                        </MudStack>
                        @if (entry.IsCorrection)
                        {
                            <MudAlert Severity="Severity.Warning" Variant="Variant.Text" Dense="true">
                                Correction event — supersedes earlier log.
                            </MudAlert>
                        }
                    </MudStack>
                </MudPaper>
            }
        </MudStack>
    }
</MudStack>

@code {
    private readonly IReadOnlyList<MatchHistoryDemoEntry> _entries =
    [
        new MatchHistoryDemoEntry(new DateOnly(2025, 2, 28), 1, "Alice", "Bob", "11-8, 8-11, 11-7", "2-1", false),
        new MatchHistoryDemoEntry(new DateOnly(2025, 2, 28), 2, "Charlie", "Diana", "11-9, 11-9", "2-0", false),
        new MatchHistoryDemoEntry(new DateOnly(2025, 2, 28), 3, "Alice", "Bob", "11-5, 11-9", "2-0", true),
        new MatchHistoryDemoEntry(new DateOnly(2025, 2, 27), 1, "Morgan", "Evelyn", "8-11, 11-7, 11-9", "2-1", false)
    ];

    private sealed record MatchHistoryDemoEntry(
        DateOnly Date,
        int Ordinal,
        string PlayerOne,
        string PlayerTwo,
        string SetSummary,
        string ResultText,
        bool IsCorrection)
    {
        public string Label => $"#{Ordinal} · {Date.ToString("MMM dd")}";
    }
}
